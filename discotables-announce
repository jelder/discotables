#!/usr/bin/perl
use strict;
use warnings;

use Getopt::Long;
use IO::Socket::Multicast;
use Crypt::CBC;
use File::Basename;
use English '-no_match_vars';
use Sys::Hostname;
use Sys::Syslog qw( :standard :macros setlogsock );

$0 = basename $0;
openlog $0, "ndelay,nowaitpid", LOG_DAEMON or die $!;
setlogsock 'unix';

my $key = '';
my $interval = 1;
my $table = '';
my $announce = '239.0.0.1';
my $port = '49153';
my $iface;

GetOptions(
    'key=s' => \$key,
    'interval=n' => \$interval,
    'table=s' => \$table,
    'announce=s' => \$announce,
    'iface=s' => \$iface,
) or die $!;

die unless $key;

my $cipher = Crypt::CBC->new(
    -key    => $key, 
    -cipher => 'Blowfish'
);

my $socket = IO::Socket::Multicast->new();
$socket->mcast_if($iface) if $iface;
$socket->mcast_ttl(1);
$socket->mcast_loopback(0);

while (1) {
    my @frame = (
        time,
        $table,
    );
    my $frame = join(' ',@frame);
    print "$frame\n";
    $frame = $cipher->encrypt($frame);
    $socket->mcast_send($frame, $announce . ':' . $port)
        or warn $!;
} continue {
    sleep $interval;
}

